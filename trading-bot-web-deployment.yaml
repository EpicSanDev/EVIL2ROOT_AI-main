apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "4"
    kubectl.kubernetes.io/last-applied-configuration: |
      {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"app":"trading-bot","component":"web"},"name":"trading-bot-web","namespace":"evil2root-trading"},"spec":{"replicas":2,"selector":{"matchLabels":{"app":"trading-bot","component":"web"}},"strategy":{"rollingUpdate":{"maxSurge":1,"maxUnavailable":0},"type":"RollingUpdate"},"template":{"metadata":{"annotations":{"prometheus.io/path":"/metrics","prometheus.io/port":"9090","prometheus.io/scrape":"true"},"labels":{"app":"trading-bot","component":"web"}},"spec":{"affinity":{"podAntiAffinity":{"preferredDuringSchedulingIgnoredDuringExecution":[{"podAffinityTerm":{"labelSelector":{"matchLabels":{"app":"trading-bot","component":"web"}},"topologyKey":"kubernetes.io/hostname"},"weight":100}]}},"containers":[{"args":["web-with-scheduler"],"env":[{"name":"FLASK_APP","valueFrom":{"configMapKeyRef":{"key":"FLASK_APP","name":"trading-bot-config"}}},{"name":"FLASK_ENV","valueFrom":{"configMapKeyRef":{"key":"FLASK_ENV","name":"trading-bot-config"}}},{"name":"DB_USER","valueFrom":{"secretKeyRef":{"key":"DB_USER","name":"trading-bot-secrets"}}},{"name":"DB_PASSWORD","valueFrom":{"secretKeyRef":{"key":"DB_PASSWORD","name":"trading-bot-secrets"}}},{"name":"DB_NAME","valueFrom":{"secretKeyRef":{"key":"DB_NAME","name":"trading-bot-secrets"}}},{"name":"DB_HOST","value":"postgres"},{"name":"REDIS_HOST","value":"redis"}],"image":"registry.digitalocean.com/epicsandev/evil2root-ai:latest","imagePullPolicy":"Always","lifecycle":{"preStop":{"exec":{"command":["/bin/sh","-c","sleep 10"]}}},"livenessProbe":{"failureThreshold":3,"httpGet":{"path":"/health","port":5000},"initialDelaySeconds":120,"periodSeconds":15,"timeoutSeconds":5},"name":"web","ports":[{"containerPort":5000,"name":"http"},{"containerPort":9090,"name":"metrics"}],"readinessProbe":{"failureThreshold":3,"httpGet":{"path":"/health","port":5000},"initialDelaySeconds":60,"periodSeconds":10,"successThreshold":1,"timeoutSeconds":3},"resources":{"limits":{"cpu":"1000m","memory":"4Gi"},"requests":{"cpu":"500m","memory":"1Gi"}},"startupProbe":{"failureThreshold":12,"httpGet":{"path":"/health","port":5000},"initialDelaySeconds":30,"periodSeconds":10,"timeoutSeconds":3},"volumeMounts":[{"mountPath":"/app/data","name":"app-data"},{"mountPath":"/app/logs","name":"app-logs"},{"mountPath":"/app/saved_models","name":"saved-models"}]}],"imagePullSecrets":[{"name":"registry-epicsandev"}],"terminationGracePeriodSeconds":60,"volumes":[{"name":"app-data","persistentVolumeClaim":{"claimName":"app-data"}},{"name":"app-logs","persistentVolumeClaim":{"claimName":"app-logs"}},{"name":"saved-models","persistentVolumeClaim":{"claimName":"saved-models"}}]}}}}
  creationTimestamp: "2025-03-13T05:54:03Z"
  generation: 4
  labels:
    app: trading-bot
    component: web
  name: trading-bot-web
  namespace: evil2root-trading
  resourceVersion: "113543"
  uid: bf522578-cdcb-4eca-9d26-a8d768a617b9
spec:
  progressDeadlineSeconds: 600
  replicas: 2
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: trading-bot
      component: web
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      annotations:
        prometheus.io/path: /metrics
        prometheus.io/port: "9090"
        prometheus.io/scrape: "true"
      creationTimestamp: null
      labels:
        app: trading-bot
        component: web
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchLabels:
                  app: trading-bot
                  component: web
              topologyKey: kubernetes.io/hostname
            weight: 100
      containers:
      - args:
        - web-with-scheduler
        env:
        - name: FLASK_APP
          valueFrom:
            configMapKeyRef:
              key: FLASK_APP
              name: trading-bot-config
        - name: FLASK_ENV
          valueFrom:
            configMapKeyRef:
              key: FLASK_ENV
              name: trading-bot-config
        - name: DB_USER
          valueFrom:
            secretKeyRef:
              key: DB_USER
              name: trading-bot-secrets
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              key: DB_PASSWORD
              name: trading-bot-secrets
        - name: DB_NAME
          valueFrom:
            secretKeyRef:
              key: DB_NAME
              name: trading-bot-secrets
        - name: DB_HOST
          value: postgres
        - name: REDIS_HOST
          value: redis
        image: registry.digitalocean.com/epicsandev/evil2root-ai:latest
        imagePullPolicy: Always
        lifecycle:
          preStop:
            exec:
              command:
              - /bin/sh
              - -c
              - sleep 10
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /health
            port: 5000
            scheme: HTTP
          initialDelaySeconds: 120
          periodSeconds: 15
          successThreshold: 1
          timeoutSeconds: 5
        name: web
        ports:
        - containerPort: 5000
          name: http
          protocol: TCP
        - containerPort: 9090
          name: metrics
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /health
            port: 5000
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 3
        resources:
          limits:
            cpu: "1"
            memory: 4Gi
          requests:
            cpu: 500m
            memory: 1Gi
        startupProbe:
          failureThreshold: 12
          httpGet:
            path: /health
            port: 5000
            scheme: HTTP
          initialDelaySeconds: 30
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 3
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /app/data
          name: app-data
        - mountPath: /app/logs
          name: app-logs
        - mountPath: /app/saved_models
          name: saved-models
      dnsPolicy: ClusterFirst
      imagePullSecrets:
      - name: registry-epicsandev
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 60
      volumes:
      - name: app-data
        persistentVolumeClaim:
          claimName: app-data
      - name: app-logs
        persistentVolumeClaim:
          claimName: app-logs
      - name: saved-models
        persistentVolumeClaim:
          claimName: saved-models
status:
  conditions:
  - lastTransitionTime: "2025-03-13T05:54:03Z"
    lastUpdateTime: "2025-03-13T05:54:03Z"
    message: Deployment does not have minimum availability.
    reason: MinimumReplicasUnavailable
    status: "False"
    type: Available
  - lastTransitionTime: "2025-03-13T12:53:26Z"
    lastUpdateTime: "2025-03-13T12:53:26Z"
    message: ReplicaSet "trading-bot-web-b74b8674d" has timed out progressing.
    reason: ProgressDeadlineExceeded
    status: "False"
    type: Progressing
  observedGeneration: 4
  replicas: 3
  unavailableReplicas: 3
  updatedReplicas: 1
