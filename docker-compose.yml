version: '3.8'

services:
  web:
    build: .
    image: evil2root/trading-bot:latest
    container_name: trading-bot-web
    command: gunicorn run:app --bind=0.0.0.0:5000
    ports:
      - "5000:5000"
      - "9090:9090"  # Port for Prometheus metrics
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
      - ./saved_models:/app/saved_models
    env_file:
      - .env
    depends_on:
      - db
      - redis
    restart: unless-stopped

  analysis-bot:
    build: .
    image: evil2root/trading-bot:latest
    container_name: trading-bot-analysis
    command: python start_daily_analysis.py
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
      - ./saved_models:/app/saved_models
    env_file:
      - .env
    depends_on:
      - db
      - redis
    restart: unless-stopped

  db:
    image: postgres:13
    container_name: trading-bot-db
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
    ports:
      - "5432:5432"
    restart: unless-stopped

  redis:
    image: redis:6
    container_name: trading-bot-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped

  adminer:
    image: adminer
    container_name: trading-bot-adminer
    restart: unless-stopped
    ports:
      - "8080:8080"
    depends_on:
      - db

  prometheus:
    image: prom/prometheus:latest
    container_name: trading-bot-prometheus
    volumes:
      - ./monitoring/prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    ports:
      - "9091:9090"
    restart: unless-stopped
    depends_on:
      - web

  grafana:
    image: grafana/grafana:latest
    container_name: trading-bot-grafana
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning
      - ./monitoring/grafana/dashboards:/var/lib/grafana/dashboards
    environment:
      - GF_SECURITY_ADMIN_USER=${GRAFANA_ADMIN_USER:-admin}
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD:-admin}
      - GF_USERS_ALLOW_SIGN_UP=false
    ports:
      - "3000:3000"
    restart: unless-stopped
    depends_on:
      - prometheus

  # Optional: Uncomment to enable TensorBoard for model visualization
  # tensorboard:
  #   build: .
  #   image: evil2root/trading-bot:latest
  #   container_name: trading-bot-tensorboard
  #   command: tensorboard --logdir=/app/logs/tensorboard --host=0.0.0.0 --port=6006
  #   volumes:
  #     - ./logs:/app/logs
  #   ports:
  #     - "6006:6006"
  #   restart: unless-stopped

volumes:
  postgres_data:
  redis_data:
  prometheus_data:
  grafana_data:
