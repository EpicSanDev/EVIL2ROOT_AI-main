FROM python:3.10-slim

WORKDIR /app

# Installer les dépendances système nécessaires
RUN apt-get update && apt-get install -y --no-install-recommends \
    build-essential \
    libpq-dev \
    wget \
    ca-certificates \
    unzip \
    gcc \
    g++ \
    make \
    pkg-config \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

# Copier les fichiers de requirements et scripts
COPY requirements.txt .
COPY docker/fix-talib-install.sh /tmp/fix-talib-install.sh

# Corriger la version de TA-Lib dans requirements
RUN sed -i 's/TA-Lib>=0.4.28/TA-Lib==0.4.28/' requirements.txt

# Installer les dépendances Python
RUN apt-get update && apt-get install -y --no-install-recommends \
        build-essential \
        wget \
        ca-certificates \
        gcc \
        g++ \
        make \
        pkg-config \
    && wget -q https://prdownloads.sourceforge.net/ta-lib/ta-lib-0.4.0-src.tar.gz \
    && tar -xzf ta-lib-0.4.0-src.tar.gz \
    && cd ta-lib \
    && ./configure --prefix=/usr --build=$(uname -m)-unknown-linux-gnu \
    && make -j$(nproc) \
    && make install \
    && cd .. \
    && rm -rf ta-lib ta-lib-0.4.0-src.tar.gz \
    && ldconfig \
    && pip install --no-cache-dir --upgrade pip wheel setuptools \
    && pip install --no-cache-dir -r requirements.txt \
    && pip install --no-cache-dir TA-Lib==0.4.28 \
    && pip install --no-cache-dir PyJWT \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

# Copier le code source
COPY src/ /app/src/

# Créer les répertoires nécessaires
RUN mkdir -p /app/logs /app/data

# Variables d'environnement
ENV PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1 \
    PYTHONPATH=/app \
    LD_LIBRARY_PATH=/usr/lib

# Exposer le port
EXPOSE 8000

# Commande de démarrage
CMD ["uvicorn", "src.api.app:create_app", "--host", "0.0.0.0", "--port", "8000"] 