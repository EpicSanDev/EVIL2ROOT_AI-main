FROM python:3.10-slim

WORKDIR /app

# Variables d'environnement pour le build
ENV PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1 \
    PIP_DEFAULT_TIMEOUT=100 \
    PYTHONIOENCODING=UTF-8

# Installer les dépendances système et de compilation nécessaires
RUN apt-get update && \
    apt-get install -y --no-install-recommends \
        wget \
        build-essential \
        gcc \
        g++ \
        make \
        pkg-config \
        python3-dev \
        unzip \
        git \
        automake \
        libtool \
        autoconf \
        ca-certificates \
        curl \
    && rm -rf /var/lib/apt/lists/*

# Télécharger et installer TA-Lib avec optimisations pour ARM64
RUN wget http://prdownloads.sourceforge.net/ta-lib/ta-lib-0.4.0-src.tar.gz && \
    tar -xzf ta-lib-0.4.0-src.tar.gz && \
    cd ta-lib/ && \
    # Télécharger les scripts config.guess et config.sub à jour qui supportent ARM64
    curl -o config/config.guess 'https://git.savannah.gnu.org/gitweb/?p=config.git;a=blob_plain;f=config.guess;hb=HEAD' && \
    curl -o config/config.sub 'https://git.savannah.gnu.org/gitweb/?p=config.git;a=blob_plain;f=config.sub;hb=HEAD' && \
    chmod +x config/config.guess config/config.sub && \
    # Configuration et compilation
    ./configure --prefix=/usr --host=aarch64-unknown-linux-gnu && \
    make -j$(nproc) && \
    make install && \
    cd .. && \
    rm -rf ta-lib-0.4.0-src.tar.gz ta-lib/

# Installer le wrapper Python pour TA-Lib
RUN pip install --no-cache-dir --upgrade pip wheel setuptools && \
    pip install --no-cache-dir numpy Cython && \
    # Installation du wrapper Python pour TA-Lib avec options explicites pour ARM64
    env ARCHFLAGS="-arch arm64" TALIB_USE_NATIVE=1 pip install --no-cache-dir TA-Lib==0.4.28 || \
    env ARCHFLAGS="-arch arm64" pip install --no-cache-dir --global-option=build_ext --global-option="-I/usr/include/" --global-option="-L/usr/lib/" TA-Lib==0.4.28 && \
    # Vérifier l'installation
    python -c "import talib; print('TA-Lib importé avec succès sur ARM64!')"

# Créer un script de vérification
RUN echo '#!/bin/bash\npython -c "import talib; print(\"TA-Lib version:\", talib.__version__); print(\"Fonctions disponibles:\", dir(talib)[:5])"' > /usr/local/bin/verify-talib.sh && \
    chmod +x /usr/local/bin/verify-talib.sh

# Nettoyer pour réduire la taille de l'image
RUN apt-get clean && \
    apt-get autoremove -y && \
    rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*

# Définir la commande par défaut pour vérifier l'installation
CMD ["python", "-c", "import talib; print('TA-Lib fonctionne correctement sur ARM64!')"]
